import {
  defineCollectorTemplate,
  type CollectorTemplate,
} from '../defineTemplate'

const input = (v: string) => '"' + v.replaceAll('"', '\\"') + '"'

export default function (path: string): CollectorTemplate {
  return defineCollectorTemplate(
    {
      path,
    },
    (extractions) => {
      const fields: string = extractions
        .map((extraction) => {
          const fieldName = extraction.fullKey.replaceAll('.', '__')
          const args: Record<string, string | undefined> = {
            key: extraction.key,
            context: extraction.context,
          }
          const graphqlFieldName =
            extraction.type === 'text' ? 'getText' : 'getTextPlural'

          const typeProperties =
            extraction.type === 'plural' ? ' { singular, plural }' : ''

          if (extraction.type === 'text') {
            args.default = extraction.defaultText
          } else {
            args.singular = extraction.singular
            args.plural = extraction.plural
          }
          const argsString = Object.entries(args)
            .map(([inputName, inputValue]) => {
              if (inputValue) {
                return `${inputName}: ${input(inputValue)}`
              }
              return null
            })
            .filter(Boolean)
            .join(', ')

          return `${fieldName}: ${graphqlFieldName}(${argsString})${typeProperties}`
        })
        .join('\n  ')

      // Build the GraphQL query.
      return `# This file is automatically generated by the nuxt-easy-texts module.
# Any manual changes will be overwritten.

fragment easyTexts on TextsLoader {
  ${fields}
}`
    },
    null,
  )
}
